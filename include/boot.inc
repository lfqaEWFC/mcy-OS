;=========================  loader 与 kernel 常量定义  =========================

LOADER_BASE_ADDR     equ 0x900         ; loader 加载到内存中的基地址
LOADER_START_SECTOR  equ 0x2           ; loader 在磁盘中的起始扇区号


;=========================  段描述符高 32 位字段构成宏定义  =========================
; 每个段描述符共 8 字节，低 4 字节定义段界限[0~15]与段基址[0~23]，
; 高 4 字节定义段界限[16~19]、标志位（G、D/B、L、AVL、P、DPL、S、TYPE）及段基址[24~31]。
; 下面的宏用于构建段描述符的高 32 位部分。

;----------------------------------------
; G (Granularity) 位：段界限粒度控制位
; 0 = 段界限以字节为单位
; 1 = 段界限以 4KB 为单位
;----------------------------------------
DESC_G_4K       equ 1_00000000000000000000000b     ; 段界限单位为 4KB（G=1）

;----------------------------------------
; D/B 位：默认操作数与偏移地址大小
; 0 = 16 位模式下使用
; 1 = 32 位模式下使用（保护模式常用）
;----------------------------------------
DESC_D_32       equ 1_0000000000000000000000b      ; 段内偏移及操作数大小为 32 位

;----------------------------------------
; L 位：64 位代码段标志位
; 仅在 IA-32e（长模式）有效，此处始终为 0
;----------------------------------------
DESC_L          equ 0_000000000000000000000b        ; 当前为 32 位模式，置 0

;----------------------------------------
; AVL 位：软件可用标志位
; 由操作系统或程序自由定义，无硬件意义
;----------------------------------------
DESC_AVL        equ 0_00000000000000000000b         ; 保留，置 0

;----------------------------------------
; 段界限高 4 位（limit[16:19]）
; 结合低 16 位共同构成 20 位段界限
;----------------------------------------
DESC_LIMIT_CODE2    equ 1111_0000000000000000b      ; 代码段段界限高 4 位全为 1
DESC_LIMIT_DATA2    equ DESC_LIMIT_CODE2            ; 数据段段界限高 4 位同上
DESC_LIMIT_VIDEO2   equ 0000_000000000000000b       ; 显存段界限高 4 位全为 0（只映射 4KB 空间）

;----------------------------------------
; P (Present) 位：段是否存在标志
; 0 = 段不在内存中（会引发异常）
; 1 = 段存在于内存中
;----------------------------------------
DESC_P          equ 1_000000000000000b              ; 段在内存中，必须为 1

;----------------------------------------
; DPL (Descriptor Privilege Level)：描述符特权级
; 决定该段的访问权限级别，0 为最高，3 为最低
;----------------------------------------
DESC_DPL_0      equ 00_0000000000000b               ; 内核态特权级 0
DESC_DPL_1      equ 01_0000000000000b               ; 特权级 1
DESC_DPL_2      equ 10_0000000000000b               ; 特权级 2
DESC_DPL_3      equ 11_0000000000000b               ; 用户态特权级 3

;----------------------------------------
; S (System) 位：段类型标志
; 0 = 系统段（如 TSS、LDT、门描述符）
; 1 = 代码段或数据段
;----------------------------------------
DESC_S_CODE     equ 1_000000000000b                 ; 普通代码段（非系统段）
DESC_S_DATA     equ DESC_S_CODE                     ; 普通数据段（非系统段）
DESC_S_sys      equ 0_000000000000b                 ; 系统段（S=0）

;----------------------------------------
; TYPE 字段：段具体属性定义（低 4 位）
; 对代码段与数据段含义不同：
;   代码段：x=执行, c=一致性, r=可读, a=访问标志
;   数据段：x=0, e=扩展方向, w=可写, a=访问标志
;----------------------------------------
DESC_TYPE_CODE  equ 1000_00000000b                  ; 代码段：可执行、非依从、不可读、未访问
DESC_TYPE_DATA  equ 0010_00000000b                  ; 数据段：不可执行、向上扩展、可写、未访问


;=========================  三个段描述符的高 32 位定义  =========================
; 每个宏组合对应一个完整的段属性集合（G、D、L、AVL、Limit[16:19]、P、DPL、S、TYPE）

;----------------------------------------
; 代码段描述符高 32 位：
;   - 段粒度：4KB
;   - 操作数：32位
;   - 界限高位：FFFF
;   - 特权级：0
;   - 类型：可执行代码段
;----------------------------------------
DESC_CODE_HIGH4  equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + \
        DESC_LIMIT_CODE2 + DESC_P + DESC_DPL_0 + DESC_S_CODE + DESC_TYPE_CODE + 0x00

;----------------------------------------
; 数据段描述符高 32 位：
;   - 段粒度：4KB
;   - 操作数：32位
;   - 界限高位：FFFF
;   - 特权级：0
;   - 类型：可读可写数据段
;----------------------------------------
DESC_DATA_HIGH4  equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + \
        DESC_LIMIT_DATA2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x00

;----------------------------------------
; 显存段描述符高 32 位：
;   - 段粒度：4KB（但界限高位为0，仅映射少量空间）
;   - 操作数：32位
;   - 特权级：0
;   - 类型：可写数据段
;   - 段基址低 8 位设置为 0x0b → 对应物理地址 0xB8000
;----------------------------------------
DESC_VIDEO_HIGH4 equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + DESC_L + DESC_AVL + \
        DESC_LIMIT_VIDEO2 + DESC_P + DESC_DPL_0 + DESC_S_DATA + DESC_TYPE_DATA + 0x0b


;=========================  段选择子字段定义  =========================
; 段选择子结构（16位）：
;   15~3：描述符索引
;   2：TI（表指示位） → 0=GDT，1=LDT
;   1~0：RPL（请求特权级）

;----------------------------------------
; RPL：请求特权级，用于确定当前任务的权限
;----------------------------------------
RPL0  equ 00b       ; 内核态（最高权限）
RPL1  equ 01b       ; 特权级 1
RPL2  equ 10b       ; 特权级 2
RPL3  equ 11b       ; 用户态（最低权限）

;----------------------------------------
; TI：表指示位，选择描述符表来源
;----------------------------------------
TI_GDT  equ 000b    ; 段选择子引用 GDT（全局描述符表）
TI_LDT  equ 100b    ; 段选择子引用 LDT（局部描述符表）
